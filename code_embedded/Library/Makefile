LIBRARYNAME=Library

LIBRARYSOURCE= \
	Src\CodeLibrary.cpp \
	Src\Exception.cpp Src\Object.cpp Src\Type.cpp Src\Collections\Array.cpp \
	Src\Collections\Graph.cpp Src\Collections\HashMap.cpp Src\Collections\Map.cpp Src\Collections\Queue.cpp Src\Collections\Stack.cpp \
	Src\Com\BString.cpp Src\Com\ComException.cpp Src\Com\ComObject.cpp Src\Com\Guid.cpp Src\Com\Variant.cpp \
	Src\Data\Ado\Connection.cpp \
	Src\Data\Xml\Document.cpp Src\Data\Xml\NamedNodeMap.cpp Src\Data\Xml\Node.cpp Src\Data\Xml\NodeList.cpp Src\Data\Xml\ParseError.cpp \
	Src\Debug\Assert.cpp Src\Debug\Debug.cpp Src\Debug\Trace.cpp \
	Src\Graphics\Color.cpp Src\Graphics\Image.cpp Src\Graphics\Mesh.cpp Src\Graphics\MeshIO.cpp Src\Graphics\MeshPly.cpp \
	Src\Graphics\DirectX\Camera.cpp Src\Graphics\DirectX\Device.cpp Src\Graphics\DirectX\DirectXException.cpp Src\Graphics\DirectX\IndexBuffer.cpp Src\Graphics\DirectX\PixelShader.cpp Src\Graphics\DirectX\RenderControl.cpp Src\Graphics\DirectX\Shader.cpp Src\Graphics\DirectX\Surface.cpp Src\Graphics\DirectX\Texture.cpp Src\Graphics\DirectX\VertexBuffer.cpp Src\Graphics\DirectX\VertexDeclaration.cpp Src\Graphics\DirectX\VertexShader.cpp \
	Src\Graphics\OpenGL\Camera.cpp Src\Graphics\OpenGL\Context.cpp Src\Graphics\OpenGL\FrameBuffer.cpp Src\Graphics\OpenGL\IndexBuffer.cpp Src\Graphics\OpenGL\Light.cpp Src\Graphics\OpenGL\Material.cpp Src\Graphics\OpenGL\OpenGLException.cpp Src\Graphics\OpenGL\RenderBuffer.cpp Src\Graphics\OpenGL\RenderControl.cpp Src\Graphics\OpenGL\Texture.cpp Src\Graphics\OpenGL\VertexBuffer.cpp \
	Src\IO\BinaryStream.cpp Src\IO\BZip2Stream.cpp Src\IO\Compression.cpp Src\IO\DebugStream.cpp Src\IO\File.cpp Src\IO\GZipStream.cpp Src\IO\MemoryMappedFile.cpp Src\IO\MemoryStream.cpp Src\IO\PagedFile.cpp Src\IO\Path.cpp Src\IO\Pipe.cpp Src\IO\ProxyStream.cpp Src\IO\StdIO.cpp Src\IO\Stream.cpp Src\IO\TextStream.cpp \
	Src\Lua\LuaException.cpp Src\Lua\VirtualMachine.cpp \
	Src\Lua\LuaBind\class.cpp Src\Lua\LuaBind\class_info.cpp Src\Lua\LuaBind\class_registry.cpp Src\Lua\LuaBind\class_rep.cpp Src\Lua\LuaBind\create_class.cpp Src\Lua\LuaBind\error.cpp Src\Lua\LuaBind\find_best_match.cpp Src\Lua\LuaBind\function.cpp Src\Lua\LuaBind\implicit_cast.cpp Src\Lua\LuaBind\link_compatibility.cpp Src\Lua\LuaBind\object_rep.cpp Src\Lua\LuaBind\open.cpp Src\Lua\LuaBind\overload_rep.cpp Src\Lua\LuaBind\pcall.cpp Src\Lua\LuaBind\ref.cpp Src\Lua\LuaBind\scope.cpp Src\Lua\LuaBind\stack_content_by_name.cpp Src\Lua\LuaBind\weak_ref.cpp Src\Lua\LuaBind\wrapper_base.cpp Src\Lua\LuaLib\lapi.cpp Src\Lua\LuaLib\lauxlib.cpp Src\Lua\LuaLib\lbaselib.cpp Src\Lua\LuaLib\lcode.cpp Src\Lua\LuaLib\ldblib.cpp Src\Lua\LuaLib\ldebug.cpp Src\Lua\LuaLib\ldo.cpp Src\Lua\LuaLib\ldump.cpp Src\Lua\LuaLib\lfunc.cpp Src\Lua\LuaLib\lgc.cpp Src\Lua\LuaLib\linit.cpp Src\Lua\LuaLib\liolib.cpp Src\Lua\LuaLib\llex.cpp Src\Lua\LuaLib\lmathlib.cpp Src\Lua\LuaLib\lmem.cpp Src\Lua\LuaLib\loadlib.cpp Src\Lua\LuaLib\lobject.cpp Src\Lua\LuaLib\lopcodes.cpp Src\Lua\LuaLib\loslib.cpp Src\Lua\LuaLib\lparser.cpp Src\Lua\LuaLib\lstate.cpp Src\Lua\LuaLib\lstring.cpp Src\Lua\LuaLib\lstrlib.cpp Src\Lua\LuaLib\ltable.cpp Src\Lua\LuaLib\ltablib.cpp Src\Lua\LuaLib\ltm.cpp Src\Lua\LuaLib\lua.cpp Src\Lua\LuaLib\luac.cpp Src\Lua\LuaLib\lundump.cpp Src\Lua\LuaLib\lvm.cpp Src\Lua\LuaLib\lzio.cpp Src\Lua\LuaLib\print.cpp \
	Src\Math\Complex.cpp Src\Math\Math.cpp Src\Math\Matrix.cpp Src\Math\Matrix2.cpp Src\Math\Matrix3.cpp Src\Math\Matrix4.cpp Src\Math\PiecewisePolynomial.cpp Src\Math\Quaternion.cpp Src\Math\SparseMatrix.cpp Src\Math\Vector.cpp Src\Math\Vector2.cpp Src\Math\Vector3.cpp Src\Math\Vector4.cpp \
	Src\Memory\Buffer.cpp Src\Memory\Crc32.cpp Src\Memory\Md5.cpp Src\Memory\Memory.cpp Src\Memory\MemoryPool.cpp \
	Src\Net\DNS.cpp Src\Net\Http.cpp Src\Net\IPAddress.cpp Src\Net\IPEndPoint.cpp Src\Net\Socket.cpp Src\Net\SocketStream.cpp Src\Net\Uri.cpp \
	Src\System\Application.cpp Src\System\CommandLineParser.cpp Src\System\Console.cpp Src\System\ConsoleApplication.cpp Src\System\Library.cpp \
	Src\System\LinuxSystemException.cpp Src\System\Module.cpp Src\System\Platform.cpp Src\System\Process.cpp Src\System\Profiler.cpp Src\System\Registry.cpp \
	Src\System\Service.cpp Src\System\ServiceApplication.cpp Src\System\Version.cpp Src\System\Win32Exception.cpp Src\System\WindowsApplication.cpp \
	Src\System\Threading\ConditionVariable.cpp Src\System\Threading\CriticalSection.cpp Src\System\Threading\Event.cpp Src\System\Threading\Mutex.cpp \
	Src\System\Threading\ScopedLock.cpp Src\System\Threading\Semaphore.cpp Src\System\Threading\Thread.cpp Src\System\Threading\ThreadPool.cpp \
	Src\Text\RegularExpression.cpp Src\Text\String.cpp Src\Text\Greta\regexpr2.cpp Src\Text\Greta\syntax2.cpp \
	Src\Time\DateTime.cpp Src\Time\Timer.cpp \
	Src\UI\ConsoleView.cpp Src\UI\Dialog.cpp Src\UI\FileOpenDialog.cpp Src\UI\FileSaveDialog.cpp Src\UI\FrameWindow.cpp Src\UI\ProgressDialog.cpp \
	Src\UI\SplitView.cpp Src\UI\StatusBar.cpp Src\UI\TabbedContainer.cpp Src\UI\TaskDialog.cpp Src\UI\View.cpp Src\UI\Window.cpp Src\UI\WindowClass.cpp \
	Src\UI\Controls\AbstractButtonControl.cpp Src\UI\Controls\ButtonControl.cpp Src\UI\Controls\CheckboxControl.cpp Src\UI\Controls\ComboBoxControl.cpp \
	Src\UI\Controls\Control.cpp Src\UI\Controls\EditControl.cpp Src\UI\Controls\EditorControl.cpp Src\UI\Controls\ProgressBarControl.cpp Src\UI\Controls\RadioButtonControl.cpp \
	Src\UI\Controls\StaticControl.cpp Src\UI\GDI\Accelerator.cpp Src\UI\GDI\Bitmap.cpp Src\UI\GDI\Brush.cpp Src\UI\GDI\Cursor.cpp Src\UI\GDI\DeviceContext.cpp Src\UI\GDI\Font.cpp Src\UI\GDI\Icon.cpp Src\UI\GDI\Menu.cpp \
	Src\Utility\Bits.cpp Src\Utility\Traits.cpp



INCLUDE=$(INCLUDE);D:\Development\Include;$(DXSDK_DIR)\Include
LIBRARYOBJECTS=$(LIBRARYSOURCE:cpp=obj)

LIBRARYNAME=Bin\$(CPU)\$(LIBRARYNAME)

!IFNDEF NODEBUG
!IF "$(CPU)" == "AMD64"

LIB=$(LIB);D:\Development\Lib\amd64;$(DXSDK_DIR)\Lib\x64
LIBRARYOBJECTS=$(LIBRARYOBJECTS:Src=Obj\amd64\Debug)

!ENDIF
!IF "$(CPU)" == "i386"

LIB=$(LIB);D:\Development\Lib\i386;$(DXSDK_DIR)\Lib\x86
LIBRARYOBJECTS=$(LIBRARYOBJECTS:Src=Obj\i386\Debug)

!ENDIF

OBJDIR=Obj\$(CPU)\Debug
LIBRARYNAME=$(LIBRARYNAME)D
CFLAGS=$(CFLAGS) /MDd /Gm /RTC1 /Gd /Od /D_DEBUG 

!ELSE
!IF "$(CPU)" == "AMD64"

LIB=$(LIB);D:\Development\Lib\amd64;$(DXSDK_DIR)\Lib\x64
LIBRARYOBJECTS=$(LIBRARYOBJECTS:Src=Obj\amd64\Release)

!ENDIF
!IF "$(CPU)" == "i386"

LIB=$(LIB);D:\Development\Lib\i386;$(DXSDK_DIR)\Lib\x86
LIBRARYOBJECTS=$(LIBRARYOBJECTS:Src=Obj\i386\Release)

!ENDIF

OBJDIR=Obj\$(CPU)\Release
CFLAGS=$(CFLAGS) /MD /Ox /Ob2 /Oi /Ot /GL /DNDEBUG
LFLAGS=$(LFLAGS) /LTCG 

!ENDIF

LINK=link
CFLAGS=$(CFLAGS) /D_CRT_SECURE_NO_WARNINGS /DBASEAPI_EXPORT /DWIN32 /ISrc /nologo /EHsc /Zi /W3 /Wp64 
LFLAGS=$(LFLAGS) /DLL /PDB:$(LIBRARYNAME).pdb /OUT:$(LIBRARYNAME).dll /nologo /DEBUG 

all: $(LIBRARYNAME).dll

clean:
	@del $(LIBRARYNAME).dll
	@del /S /Q Obj
	@del /S /Q Bin
	
$(LIBRARYNAME).dll : $(LIBRARYOBJECTS)
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(LINK) @<<Link.Options
$(LFLAGS)
$(LIBRARYOBJECTS)
<<NOKEEP
	
{Src}.cpp{$(OBJDIR)}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@
	
{Src\Collections}.cpp{$(OBJDIR)\Collections}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Com}.cpp{$(OBJDIR)\Com}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Data\Ado}.cpp{$(OBJDIR)\Data\Ado}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Data\Xml}.cpp{$(OBJDIR)\Data\Xml}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Debug}.cpp{$(OBJDIR)\Debug}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Graphics}.cpp{$(OBJDIR)\Graphics}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Graphics\OpenGL}.cpp{$(OBJDIR)\Graphics\OpenGL}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Graphics\DirectX}.cpp{$(OBJDIR)\Graphics\DirectX}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\IO}.cpp{$(OBJDIR)\IO}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Lua}.cpp{$(OBJDIR)\Lua}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Lua\LuaBind}.cpp{$(OBJDIR)\Lua\LuaBind}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Lua\LuaLib}.cpp{$(OBJDIR)\Lua\LuaLib}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Math}.cpp{$(OBJDIR)\Math}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Memory}.cpp{$(OBJDIR)\Memory}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Net}.cpp{$(OBJDIR)\Net}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\System}.cpp{$(OBJDIR)\System}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\System\Threading}.cpp{$(OBJDIR)\System\Threading}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Text}.cpp{$(OBJDIR)\Text}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Text\Greta}.cpp{$(OBJDIR)\Text\Greta}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Time}.cpp{$(OBJDIR)\Time}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\UI}.cpp{$(OBJDIR)\UI}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\UI\Controls}.cpp{$(OBJDIR)\UI\Controls}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\UI\GDI}.cpp{$(OBJDIR)\UI\GDI}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@

{Src\Utility}.cpp{$(OBJDIR)\Utility}.obj :
	@IF NOT EXIST $(@D) MKDIR $(@D)
	@$(CC) /c $(CFLAGS) $< /Fo$@


